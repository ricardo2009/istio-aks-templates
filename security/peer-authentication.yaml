# =============================================================================
# Peer Authentication - Autenticação mTLS entre serviços
# =============================================================================
# Define políticas de autenticação peer-to-peer no mesh usando mTLS.
# Compatível com AKS Istio add-on gerenciado que usa namespace aks-istio-system.
#
# Template processado pelo apply.sh usando yq e envsubst
# Variáveis disponíveis: $ENVIRONMENT, $VALUES_FILE

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default-peer-authentication
  namespace: default  # Aplica-se ao namespace default
  labels:
    version: v1.0.0
    managed-by: istio-templates
    environment: ${ENVIRONMENT}
    feature: security
    component: peer-authentication
  annotations:
    istio-templates.io/description: "Política padrão de autenticação mTLS"
    istio-templates.io/category: "security"
    istio-templates.io/environment: "${ENVIRONMENT}"
spec:
  # Modo mTLS configurável por ambiente
  # STRICT: Apenas tráfego mTLS é permitido
  # PERMISSIVE: Permite tráfego mTLS e plaintext (para migração)
  # DISABLE: Desabilita mTLS
  mtls:
    mode: STRICT  # Padrão para todos os ambientes

---
# =============================================================================
# Peer Authentication mesh-wide (aplicado globalmente)
# =============================================================================
# Esta política se aplica a todo o mesh quando criada no namespace raiz do Istio

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: mesh-wide-peer-authentication
  namespace: aks-istio-system  # Namespace correto para AKS Istio add-on
  labels:
    version: v1.0.0
    managed-by: istio-templates
    environment: ${ENVIRONMENT}
    feature: security
    component: peer-authentication-mesh
  annotations:
    istio-templates.io/description: "Política mesh-wide de autenticação mTLS"
    istio-templates.io/category: "security"
    istio-templates.io/environment: "${ENVIRONMENT}"
spec:
  # Política para todo o mesh
  mtls:
    # Em dev pode ser PERMISSIVE, em prod deve ser STRICT
    mode: STRICT

---
# =============================================================================
# Peer Authentication para workload específico
# =============================================================================
# Política mTLS aplicada apenas a um workload específico

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: api-service-peer-authentication
  namespace: default
  labels:
    version: v1.0.0
    managed-by: istio-templates
    environment: ${ENVIRONMENT}
    feature: security
    component: peer-authentication-workload
  annotations:
    istio-templates.io/description: "Política mTLS específica para API service"
    istio-templates.io/category: "security"
    istio-templates.io/environment: "${ENVIRONMENT}"
spec:
  # Seletor para workload específico
  selector:
    matchLabels:
      app: api-service
  
  # Configuração de mTLS para este workload
  mtls:
    mode: STRICT
  
  # Configuração por porta (opcional)
  portLevelMtls:
    8080:
      mode: STRICT
    8443:
      mode: STRICT

---
# =============================================================================
# Peer Authentication para desenvolvimento (PERMISSIVE)
# =============================================================================
# Esta política permite tráfego mTLS e plaintext, útil durante desenvolvimento
# ou migração gradual para mTLS

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: dev-permissive-peer-authentication
  namespace: development  # Namespace específico para desenvolvimento
  labels:
    version: v1.0.0
    managed-by: istio-templates
    environment: ${ENVIRONMENT}
    feature: security
    component: peer-authentication-dev
  annotations:
    istio-templates.io/description: "Política permissiva para desenvolvimento"
    istio-templates.io/category: "security"
    istio-templates.io/environment: "${ENVIRONMENT}"
spec:
  mtls:
    # Permite tanto tráfego mTLS quanto plaintext
    mode: PERMISSIVE