# =============================================================================
# GATEWAY TEMPLATE - CONFIGURAÇÕES COMPLETAS E CONDICIONAIS
# =============================================================================
# Este template contém TODAS as configurações possíveis do Istio Gateway
# As configurações são aplicadas condicionalmente baseadas nos valores definidos
# Compatível com AKS Istio Add-on
#
# INSTRUÇÕES DE USO:
# Este template deve ser processado primeiro por um preprocessador que resolve
# as condicionais, e depois pelo envsubst para substituir as variáveis

apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: ${GATEWAY_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    version: ${VERSION}
    environment: ${ENVIRONMENT}
    gateway-type: ${GATEWAY_TYPE:-external}
    managed-by: ${MANAGED_BY}
    # Labels condicionais - incluídos se variáveis estão definidas
    # team: ${GATEWAY_TEAM}
    # project: ${GATEWAY_PROJECT}
    # cost-center: ${GATEWAY_COST_CENTER}
  annotations:
    istio-templates.io/category: "traffic-management"
    istio-templates.io/component: "gateway"
    istio-templates.io/template-version: "1.0.0"
    istio-templates.io/description: "${GATEWAY_DESCRIPTION:-Gateway for ${APP_NAME}}"
    # Annotations condicionais - incluídas se variáveis estão definidas
    # cert-manager.io/issuer: ${GATEWAY_CERT_MANAGER_ISSUER}
    # external-dns.alpha.kubernetes.io/hostname: ${GATEWAY_EXTERNAL_DNS}
    # prometheus.io/scrape: ${GATEWAY_PROMETHEUS_SCRAPE:-true}
    # prometheus.io/port: ${GATEWAY_PROMETHEUS_PORT:-15090}
    # prometheus.io/path: ${GATEWAY_PROMETHEUS_PATH:-/stats/prometheus}
spec:
  selector:
    istio: ${GATEWAY_SELECTOR:-aks-istio-ingressgateway-external}
    # Seletores adicionais condicionais
    # ${GATEWAY_CUSTOM_SELECTOR_KEY}: ${GATEWAY_CUSTOM_SELECTOR_VALUE}
  
  servers:
  # =============================================================================
  # SERVIDOR HTTPS - SEMPRE PRESENTE COM TODAS AS OPÇÕES
  # =============================================================================
  - port:
      number: 443
      name: https-${GATEWAY_NAME}
      protocol: HTTPS
    hosts:
    - "${SERVICE_HOST}"
    - "${SERVICE_HOST_ADDITIONAL:-*.${SERVICE_HOST}}"
    # Hosts condicionais adicionais
    # - "${SERVICE_HOST_WILDCARD}"
    # - "${SERVICE_HOST_API}"
    # - "${SERVICE_HOST_WWW}"
    # - "${SERVICE_HOST_ADMIN}"
    # - "${SERVICE_HOST_STAGING}"
    # - "${SERVICE_HOST_INTERNAL}"
    tls:
      mode: ${TLS_MODE:-SIMPLE}  # SIMPLE, MUTUAL, PASSTHROUGH, ISTIO_MUTUAL
      # Configuração básica de TLS
      credentialName: ${TLS_CREDENTIAL_NAME:-${GATEWAY_NAME}-tls}
      # Configurações avançadas de TLS - incluídas se definidas
      # caCertificates: ${TLS_CA_CERTIFICATES}
      # serverCertificate: ${TLS_SERVER_CERTIFICATE}
      # privateKey: ${TLS_PRIVATE_KEY}
      # minProtocolVersion: ${TLS_MIN_PROTOCOL_VERSION}
      # maxProtocolVersion: ${TLS_MAX_PROTOCOL_VERSION}
      # Cipher suites - incluídas se definidas
      # cipherSuites:
      # - ${TLS_CIPHER_SUITE_1}
      # - ${TLS_CIPHER_SUITE_2}
      # - ${TLS_CIPHER_SUITE_3}

  # =============================================================================
  # SERVIDOR HTTP - CONDICIONAL (INCLUSO SE HTTP_SERVER_ENABLED=true)
  # =============================================================================
  # CONDITIONAL_START: HTTP_SERVER_ENABLED
  - port:
      number: 80
      name: http-${GATEWAY_NAME}
      protocol: HTTP
    hosts:
    - "${SERVICE_HOST}"
    - "${SERVICE_HOST_ADDITIONAL:-*.${SERVICE_HOST}}"
    # Redirect para HTTPS se habilitado
    # CONDITIONAL_START: HTTPS_REDIRECT
    tls:
      httpsRedirect: ${HTTPS_REDIRECT:-true}
    # CONDITIONAL_END: HTTPS_REDIRECT
  # CONDITIONAL_END: HTTP_SERVER_ENABLED

  # =============================================================================
  # SERVIDOR GRPC - CONDICIONAL (INCLUSO SE GRPC_SERVER_ENABLED=true)  
  # =============================================================================
  # CONDITIONAL_START: GRPC_SERVER_ENABLED
  - port:
      number: ${GRPC_PORT:-443}
      name: grpc-${GATEWAY_NAME}
      protocol: GRPC
    hosts:
    - "${GRPC_SERVICE_HOST:-grpc.${SERVICE_HOST}}"
    tls:
      mode: ${GRPC_TLS_MODE:-SIMPLE}
      credentialName: ${GRPC_TLS_CREDENTIAL_NAME:-${GATEWAY_NAME}-grpc-tls}
      # Configurações GRPC avançadas
      # minProtocolVersion: ${GRPC_MIN_PROTOCOL_VERSION}
      # maxProtocolVersion: ${GRPC_MAX_PROTOCOL_VERSION}
  # CONDITIONAL_END: GRPC_SERVER_ENABLED

  # =============================================================================
  # SERVIDOR TCP - CONDICIONAL (INCLUSO SE TCP_SERVER_ENABLED=true)
  # =============================================================================
  # CONDITIONAL_START: TCP_SERVER_ENABLED
  - port:
      number: ${TCP_PORT:-9000}
      name: tcp-${GATEWAY_NAME}
      protocol: TCP
    hosts:
    - "${TCP_SERVICE_HOST:-tcp.${SERVICE_HOST}}"
    # CONDITIONAL_START: TCP_TLS_ENABLED
    tls:
      mode: ${TCP_TLS_MODE:-PASSTHROUGH}
      # credentialName: ${TCP_TLS_CREDENTIAL_NAME}
    # CONDITIONAL_END: TCP_TLS_ENABLED
  # CONDITIONAL_END: TCP_SERVER_ENABLED

  # =============================================================================
  # SERVIDOR HTTPS MUTUAL - CONDICIONAL (INCLUSO SE HTTPS_MUTUAL_ENABLED=true)
  # =============================================================================
  # CONDITIONAL_START: HTTPS_MUTUAL_ENABLED
  - port:
      number: ${HTTPS_MUTUAL_PORT:-8443}
      name: https-mutual-${GATEWAY_NAME}
      protocol: HTTPS
    hosts:
    - "${HTTPS_MUTUAL_HOST:-secure.${SERVICE_HOST}}"
    - "${HTTPS_MUTUAL_HOST_ADMIN:-admin.${SERVICE_HOST}}"
    tls:
      mode: MUTUAL
      credentialName: ${HTTPS_MUTUAL_CREDENTIAL_NAME:-${GATEWAY_NAME}-mutual-tls}
      caCertificates: ${HTTPS_MUTUAL_CA_CERTIFICATES:-/etc/ssl/certs/ca.pem}
      # Configurações de protocolo para mutual TLS
      minProtocolVersion: ${HTTPS_MUTUAL_MIN_PROTOCOL:-TLSV1_2}
      maxProtocolVersion: ${HTTPS_MUTUAL_MAX_PROTOCOL:-TLSV1_3}
      # Cipher suites para mutual TLS
      # cipherSuites:
      # - ${HTTPS_MUTUAL_CIPHER_SUITE_1}
      # - ${HTTPS_MUTUAL_CIPHER_SUITE_2}
  # CONDITIONAL_END: HTTPS_MUTUAL_ENABLED

  # =============================================================================
  # SERVIDOR WEBSOCKET - CONDICIONAL (INCLUSO SE WEBSOCKET_SERVER_ENABLED=true)
  # =============================================================================
  # CONDITIONAL_START: WEBSOCKET_SERVER_ENABLED
  - port:
      number: ${WEBSOCKET_PORT:-8080}
      name: websocket-${GATEWAY_NAME}
      protocol: HTTPS
    hosts:
    - "${WEBSOCKET_HOST:-ws.${SERVICE_HOST}}"
    - "${WEBSOCKET_HOST_SECURE:-wss.${SERVICE_HOST}}"
    tls:
      mode: ${WEBSOCKET_TLS_MODE:-SIMPLE}
      credentialName: ${WEBSOCKET_CREDENTIAL_NAME:-${GATEWAY_NAME}-websocket-tls}
  # CONDITIONAL_END: WEBSOCKET_SERVER_ENABLED

  # =============================================================================
  # SERVIDOR MONGO/DATABASE - CONDICIONAL (INCLUSO SE DB_SERVER_ENABLED=true)
  # =============================================================================
  # CONDITIONAL_START: DB_SERVER_ENABLED
  - port:
      number: ${DB_PORT:-27017}
      name: database-${GATEWAY_NAME}
      protocol: MONGO
    hosts:
    - "${DB_SERVICE_HOST:-db.${SERVICE_HOST}}"
    # CONDITIONAL_START: DB_TLS_ENABLED
    tls:
      mode: ${DB_TLS_MODE:-SIMPLE}
      credentialName: ${DB_TLS_CREDENTIAL_NAME:-${GATEWAY_NAME}-db-tls}
    # CONDITIONAL_END: DB_TLS_ENABLED
  # CONDITIONAL_END: DB_SERVER_ENABLED

  # =============================================================================
  # SERVIDORES PERSONALIZADOS - CONDICIONAIS
  # =============================================================================
  # CONDITIONAL_START: CUSTOM_SERVER_1_ENABLED
  - port:
      number: ${CUSTOM_SERVER_1_PORT:-8000}
      name: custom1-${GATEWAY_NAME}
      protocol: ${CUSTOM_SERVER_1_PROTOCOL:-HTTP}
    hosts:
    - "${CUSTOM_SERVER_1_HOST:-custom1.${SERVICE_HOST}}"
    # CONDITIONAL_START: CUSTOM_SERVER_1_TLS_ENABLED
    tls:
      mode: ${CUSTOM_SERVER_1_TLS_MODE:-SIMPLE}
      credentialName: ${CUSTOM_SERVER_1_CREDENTIAL_NAME:-${GATEWAY_NAME}-custom1-tls}
    # CONDITIONAL_END: CUSTOM_SERVER_1_TLS_ENABLED
  # CONDITIONAL_END: CUSTOM_SERVER_1_ENABLED

  # CONDITIONAL_START: CUSTOM_SERVER_2_ENABLED
  - port:
      number: ${CUSTOM_SERVER_2_PORT:-8001}
      name: custom2-${GATEWAY_NAME}
      protocol: ${CUSTOM_SERVER_2_PROTOCOL:-HTTPS}
    hosts:
    - "${CUSTOM_SERVER_2_HOST:-custom2.${SERVICE_HOST}}"
    tls:
      mode: ${CUSTOM_SERVER_2_TLS_MODE:-SIMPLE}
      credentialName: ${CUSTOM_SERVER_2_CREDENTIAL_NAME:-${GATEWAY_NAME}-custom2-tls}
  # CONDITIONAL_END: CUSTOM_SERVER_2_ENABLED