apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: 'api-gateway-advanced-vs'
  namespace: 'ecommerce-demo'
  labels:
    app: 'api-gateway'
    version: 'v1'
  annotations:
    istio.io/description: "Advanced traffic management for api-gateway"
spec:
  hosts:
  - 'ecommerce-demo.example.com'
  - 'api-gateway.ecommerce-demo.svc.cluster.local'
  gateways:
  - 'api-gateway-gateway'
  - mesh
  http:
  # Health check route (always to stable version)
  - name: health-check
    match:
    - uri:
        exact: /health
    - uri:
        exact: /ready
    - uri:
        exact: /metrics
    route:
    - destination:
        host: 'api-gateway.ecommerce-demo.svc.cluster.local'
        port:
          number: 80
        subset: v1
      weight: 100
    timeout: '5s'
  
  # Canary deployment route
  - name: canary-deployment
    match:
    - headers:
        canary:
          exact: "true"
    - headers:
        x-canary-user:
          regex: ".*"
    route:
    - destination:
        host: 'api-gateway.ecommerce-demo.svc.cluster.local'
        port:
          number: 80
        subset: canary
      weight: 100
    timeout: '30s'
    retries:
      attempts: 2
      perTryTimeout: '10s'
      retryOn: '5xx,reset,connect-failure,refused-stream'
      retryRemoteLocalities: true
  
  # A/B Testing route
  - name: ab-testing
    match:
    - headers:
        x-ab-test:
          exact: "feature-x"
    route:
    - destination:
        host: 'api-gateway.ecommerce-demo.svc.cluster.local'
        port:
          number: 80
        subset: v2
      weight: 100
    timeout: '30s'
  
  # Weighted routing (Blue-Green / Canary percentage)
  - name: weighted-routing
    match:
    - uri:
        prefix: "/api"
    route:
    - destination:
        host: 'api-gateway.ecommerce-demo.svc.cluster.local'
        port:
          number: 80
        subset: v1
      weight: 90
    - destination:
        host: 'api-gateway.ecommerce-demo.svc.cluster.local'
        port:
          number: 80
        subset: v2
      weight: 10
    timeout: '30s'
    retries:
      attempts: 3
      perTryTimeout: '10s'
      retryOn: '5xx,gateway-error,connect-failure,refused-stream'
      retryRemoteLocalities: false
    
    # Fault Injection for Chaos Engineering (disabled by default)
    # fault:
    #   delay:
    #     percentage:
    #       value: 0.0
    #     fixedDelay: '5s'
    #   abort:
    #     percentage:
    #       value: 0.0
    #     httpStatus: 500
  
  # Default route (fallback)
  - name: default-route
    match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: 'api-gateway.ecommerce-demo.svc.cluster.local'
        port:
          number: 80
        subset: v1
      weight: 100
    timeout: '30s'
    retries:
      attempts: 3
      perTryTimeout: '10s'
      retryOn: '5xx,gateway-error,connect-failure,refused-stream'
    
    # Request/Response Headers Manipulation
    headers:
      request:
        set:
          x-forwarded-proto: https
          x-request-id: '%REQ(x-request-id)%'
        add:
          x-service-version: 'v1'
        remove:
        - x-internal-header
      response:
        set:
          x-response-time: '%RESPONSE_DURATION%'
        add:
          x-served-by: 'api-gateway'
        remove:
        - x-internal-response-header
    
    # CORS Policy
    corsPolicy:
      allowOrigins:
      - exact: 'https://app.example.com'
      allowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      allowHeaders:
      - authorization
      - content-type
      - x-requested-with
      - x-user-id
      maxAge: '24h'
      allowCredentials: true
