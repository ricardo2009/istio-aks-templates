name: Deploy Istio Demo Lab

on:
  push:
    branches: [main]
    paths:
      - 'manifests/demo/**'
      - 'templates/**'
      - 'scripts/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths:
      - 'manifests/demo/**'
      - 'templates/**'
      - 'scripts/**'
      - '.github/workflows/**'

env:
  PYTHON_VERSION: '3.11'
  KEYVAULT_NAME: kv-aks-labs-secrets
  NAMESPACE: pets

jobs:
  validate:
    name: Validate Demo Lab
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install yamllint

      - name: Lint YAML manifests
        run: |
          echo "üîç Validando sintaxe YAML dos manifestos demo..."
          yamllint manifests/demo/*.yaml

      - name: Lint YAML templates
        run: |
          echo "üîç Validando sintaxe YAML dos templates..."
          yamllint templates/values.yaml

      - name: Validate Istio CRDs
        run: |
          echo "üß™ Validando CRDs Istio..."
          for file in manifests/demo/*.yaml; do
            echo "Validando $file..."
            python -c "import yaml; yaml.safe_load(open('$file'))"
          done

      - name: Upload validation artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: demo-manifests
          path: manifests/demo/
          retention-days: 30

  deploy-demo:
    name: Deploy to Demo Environment
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: demo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Sync TLS secret from Key Vault
        run: |
          python scripts/sync_tls_secret.py \
            --values-file templates/values.yaml \
            --output-file manifests/demo/00-gateway-tls-secret.yaml \
            --keyvault-name "$KEYVAULT_NAME"

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Create namespace and label for Istio injection
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl label namespace ${{ env.NAMESPACE }} istio-injection=enabled --overwrite

      - name: Deploy to AKS Demo
        run: |
          echo "üöÄ Aplicando manifests no cluster demo..."
          kubectl apply -f manifests/demo/ -n ${{ env.NAMESPACE }}

      - name: Verify deployment
        run: |
          echo "‚úÖ Verificando recursos criados..."
          kubectl get gateway -n aks-istio-ingress
          kubectl get virtualservice,destinationrule,peerauthentication,authorizationpolicy,requestauthentication,serviceentry,sidecar,telemetry,serviceaccount -n ${{ env.NAMESPACE }}
