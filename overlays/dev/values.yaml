# =============================================================================
# OVERLAY DE DESENVOLVIMENTO - values.yaml
# =============================================================================
# Este overlay sobrescreve valores específicos para o ambiente de desenvolvimento
# Usado em conjunto com o values.yaml principal

global:
  environment: "dev"
  version: "latest"
  debug: true
  managedBy: "dev-team"

# =============================================================================
# CONFIGURAÇÃO DE TRAFFIC MANAGEMENT - DEV
# =============================================================================
trafficManagement:
  gateway:
    instances:
      main-gateway:
        hosts:
          - "dev-app.internal.com"
          - "*.dev-app.internal.com"
        tls:
          mode: "SIMPLE"  # Certificado self-signed para dev
          
      internal-gateway:
        enabled: true
        hosts:
          - "internal-dev.local"

  virtualService:
    instances:
      main-vs:
        hosts:
          - "dev-app.internal.com"
          - "api-dev.internal.com"
        
        routes:
          main:
            destination:
              service: "frontend-service"
              port: 3000  # Dev server port
              subset: "dev"
            weight: 100
            timeout: "120s"  # Maior timeout para debug
            
            retries:
              attempts: 1  # Menos retries para debug mais rápido
              perTryTimeout: "30s"
              
          api:
            destination:
              service: "api-service"
              port: 8080
            weight: 80  # Permite testes de canary
            canaryDestination:
              weight: 20  # 20% para nova versão em dev
            timeout: "60s"
            
            retries:
              attempts: 2
              
        # Fault injection ativo em dev para testes
        faultInjection:
          delay:
            percentage: 2.0
            fixedDelay: "3s"
          abort:
            percentage: 0.5
            httpStatus: 500
            
        # Traffic mirroring para ambiente de teste
        trafficMirroring:
          destination:
            service: "test-service"
            port: 8080
            subset: "mirror"
          percentage: 10.0

  destinationRule:
    instances:
      main-dr:
        trafficPolicy:
          connectionPool:
            tcp:
              maxConnections: 5  # Menos conexões em dev
              connectTimeout: "10s"
            http:
              http1MaxPendingRequests: 5
              http2MaxRequests: 50
              maxRequestsPerConnection: 5
              h2UpgradePolicy: "UPGRADE"
              
          outlierDetection:
            consecutiveGatewayErrors: 3  # Mais sensível em dev
            consecutive5xxErrors: 3
            interval: "15s"
            baseEjectionTime: "15s"
            maxEjectionPercent: 30
            
          loadBalancer:
            simple: "ROUND_ROBIN"  # Mais simples para debug
            
        subsets:
          dev:
            name: "dev"
            labels:
              version: "dev"
              environment: "development"
          canary:
            name: "canary" 
            labels:
              version: "canary"
              environment: "development"

# =============================================================================
# CONFIGURAÇÃO DE SEGURANÇA - DEV
# =============================================================================
security:
  peerAuthentication:
    instances:
      default-pa:
        mtls:
          mode: "PERMISSIVE"  # Mais flexível em dev
          
  authorizationPolicy:
    instances:
      allow-all:
        enabled: true  # Política permissiva para desenvolvimento
        action: "ALLOW"
        
      api-policy:
        rules:
          - from:
            - source:
                principals: ["cluster.local/ns/dev/sa/frontend"]
                principals_additional: ["cluster.local/ns/dev/sa/debug"]
            to:
            - operation:
                methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]  # Todos os métodos
                
      debug-policy:
        enabled: true
        action: "ALLOW"
        selector:
          matchLabels:
            app: "debug-tools"

# =============================================================================
# CONFIGURAÇÃO DE OBSERVABILIDADE - DEV
# =============================================================================
observability:
  telemetry:
    instances:
      default-metrics:
        providers:
          - name: "prometheus"
        tags:
          environment: "dev"
          team: "development"
          
      debug-tracing:
        enabled: true
        providers:
          - name: "jaeger"
        sampling: 100.0  # 100% sampling em dev
        
      access-logs:
        enabled: true
        providers:
          - name: "otel"
        format: "json"
        includeHeaders: true  # Headers completos para debug

# =============================================================================
# CONFIGURAÇÃO DE RESILÊNCIA - DEV
# =============================================================================
resilience:
  serviceEntry:
    instances:
      external-api-dev:
        hosts:
          - "api-dev.external.com"
        ports:
          - number: 443
            name: "https"
            protocol: "HTTPS"
        location: "MESH_EXTERNAL"
        
  workloadEntry:
    instances:
      legacy-service:
        address: "192.168.1.100"  # IP do ambiente de dev
        ports:
          - number: 8080
            name: "http"

# =============================================================================
# CONFIGURAÇÃO DE POLÍTICAS - DEV
# =============================================================================
policiesGovernance:
  requestAuthentication:
    instances:
      jwt-auth:
        issuer: "https://dev-auth.internal.com"
        audiences:
          - "dev-api"
        jwksUri: "https://dev-auth.internal.com/.well-known/jwks.json"
        
  envoyFilter:
    instances:
      debug-headers:
        enabled: true
        configPatches:
          - applyTo: "HTTP_FILTER"
            match:
              context: "SIDECAR_INBOUND"
              listener:
                filterChain:
                  filter:
                    name: "envoy.filters.network.http_connection_manager"
            patch:
              operation: "INSERT_BEFORE"
              value:
                name: "envoy.filters.http.header_to_metadata"
                typed_config:
                  "@type": "type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadata"
                  request_rules:
                    - header: "x-debug-mode"
                      on_header_present:
                        metadata_namespace: "debug"
                        key: "enabled"
                        value: "true"

# =============================================================================
# CONFIGURAÇÃO DE EXTENSIBILIDADE - DEV
# =============================================================================
extensibility:
  wasmPlugin:
    instances:
      dev-logger:
        enabled: true
        url: "oci://dev-registry.internal.com/wasm/logger:latest"
        configuration:
          logLevel: "debug"
          includeBody: true
          maxBodySize: 1024
          
  telemetryV2:
    instances:
      dev-metrics:
        enabled: true
        providers:
          - name: "prometheus"
        tags:
          custom_header: "request.headers['x-request-id']"
          user_agent: "request.headers['user-agent']"