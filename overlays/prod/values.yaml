# =============================================================================
# OVERLAY DE PRODUÇÃO - values.yaml
# =============================================================================
# Este overlay sobrescreve valores específicos para o ambiente de produção
# Foco em performance, segurança e estabilidade

global:
  environment: "prod"
  version: "1.0.0"
  debug: false
  managedBy: "platform-team"

# =============================================================================
# CONFIGURAÇÃO DE TRAFFIC MANAGEMENT - PROD
# =============================================================================
trafficManagement:
  gateway:
    instances:
      main-gateway:
        hosts:
          - "api.company.com"
          - "www.company.com"
        tls:
          mode: "SIMPLE"
          credentialName: "company-tls-cert"
          minProtocolVersion: "TLSV1_2"
          maxProtocolVersion: "TLSV1_3"
          
      internal-gateway:
        enabled: false  # Não expor gateway interno em prod

  virtualService:
    instances:
      main-vs:
        hosts:
          - "api.company.com"
          - "www.company.com"
        
        routes:
          main:
            destination:
              service: "frontend-service"
              port: 8080
              subset: "stable"
            weight: 100  # 100% tráfego estável em prod
            timeout: "30s"  # Timeout conservador
            
            retries:
              attempts: 5  # Mais tentativas em prod
              perTryTimeout: "10s"
              retryOn: "5xx,gateway-error,connect-failure,refused-stream"
              
          api:
            destination:
              service: "api-service"
              port: 8080
              subset: "stable"
            weight: 95  # Canary mínimo em prod
            canaryDestination:
              subset: "canary"
              weight: 5   # Apenas 5% para canary
            timeout: "45s"
            
            retries:
              attempts: 3
              perTryTimeout: "15s"
              
        # Fault injection DESABILITADO em prod
        faultInjection:
          delay:
            percentage: 0
          abort:
            percentage: 0
            
        # Traffic mirroring apenas para análise
        trafficMirroring:
          destination:
            service: "analytics-service"
            port: 8080
            subset: "analytics"
          percentage: 1.0  # Apenas 1% para análise

  destinationRule:
    instances:
      main-dr:
        trafficPolicy:
          connectionPool:
            tcp:
              maxConnections: 50  # Mais conexões em prod
              connectTimeout: "5s"  # Timeout rápido
              tcpKeepalive:
                time: "7200s"
                interval: "75s"
            http:
              http1MaxPendingRequests: 50
              http2MaxRequests: 1000
              maxRequestsPerConnection: 10
              maxRetries: 5
              idleTimeout: "60s"
              h2UpgradePolicy: "UPGRADE"
              
          outlierDetection:
            consecutiveGatewayErrors: 5
            consecutive5xxErrors: 5
            interval: "30s"
            baseEjectionTime: "30s"
            maxEjectionPercent: 10  # Ejeção conservadora
            minHealthPercent: 50
            
          loadBalancer:
            simple: "LEAST_CONN"  # Distribuição otimizada
            
        subsets:
          stable:
            name: "stable"
            labels:
              version: "v1.0.0"
              environment: "production"
          canary:
            name: "canary"
            labels:
              version: "v1.1.0"
              environment: "production"

# =============================================================================
# CONFIGURAÇÃO DE SEGURANÇA - PROD
# =============================================================================
security:
  peerAuthentication:
    instances:
      default-pa:
        mtls:
          mode: "STRICT"  # mTLS obrigatório em prod
          
  authorizationPolicy:
    instances:
      default-deny:
        enabled: true
        action: "DENY"  # Negar por padrão
        
      allow-all:
        enabled: false  # Política permissiva DESABILITADA
        
      api-policy:
        rules:
          - from:
            - source:
                principals: ["cluster.local/ns/prod/sa/frontend"]
                namespaces: ["prod"]
            to:
            - operation:
                methods: ["GET", "POST"]  # Apenas métodos necessários
                paths: ["/api/v1/*"]
          - when:
            - key: "source.ip"
              values: ["10.0.0.0/8"]  # Apenas IPs internos
              
      admin-policy:
        enabled: true
        rules:
          - from:
            - source:
                principals: ["cluster.local/ns/admin/sa/admin-user"]
            to:
            - operation:
                methods: ["GET", "POST", "PUT", "DELETE"]
            when:
            - key: "request.headers[x-admin-token]"
              values: ["admin-secret-token"]

# =============================================================================
# CONFIGURAÇÃO DE OBSERVABILIDADE - PROD
# =============================================================================
observability:
  telemetry:
    instances:
      default-metrics:
        providers:
          - name: "prometheus"
        tags:
          environment: "prod"
          team: "platform"
          version: "v1.0.0"
          
      tracing:
        enabled: true
        providers:
          - name: "jaeger"
        sampling: 1.0  # Apenas 1% sampling em prod
        
      access-logs:
        enabled: true
        providers:
          - name: "otel"
        format: "json"
        includeHeaders: false  # Não incluir headers por privacidade

# =============================================================================
# CONFIGURAÇÃO DE RESILÊNCIA - PROD
# =============================================================================
resilience:
  serviceEntry:
    instances:
      external-api-prod:
        hosts:
          - "api.external.com"
        ports:
          - number: 443
            name: "https"
            protocol: "HTTPS"
        location: "MESH_EXTERNAL"
        resolution: "DNS"
        
      payment-gateway:
        hosts:
          - "secure-payments.company.com"
        ports:
          - number: 443
            name: "https-payment"
            protocol: "HTTPS"
        location: "MESH_EXTERNAL"
        
  workloadEntry:
    instances:
      legacy-mainframe:
        address: "10.1.1.100"  # IP produção do mainframe
        ports:
          - number: 443
            name: "https"
        serviceAccount: "legacy-sa"

# =============================================================================
# CONFIGURAÇÃO DE POLÍTICAS - PROD
# =============================================================================
policiesGovernance:
  requestAuthentication:
    instances:
      jwt-auth:
        issuer: "https://auth.company.com"
        audiences:
          - "api.company.com"
          - "www.company.com"
        jwksUri: "https://auth.company.com/.well-known/jwks.json"
        forwardOriginalToken: false
        
      oauth2-auth:
        enabled: true
        issuer: "https://oauth.company.com"
        audiences:
          - "oauth-api"
        
  envoyFilter:
    instances:
      security-headers:
        enabled: true
        configPatches:
          - applyTo: "HTTP_FILTER"
            match:
              context: "SIDECAR_INBOUND"
              listener:
                filterChain:
                  filter:
                    name: "envoy.filters.network.http_connection_manager"
            patch:
              operation: "INSERT_BEFORE"
              value:
                name: "envoy.filters.http.local_ratelimit"
                typed_config:
                  "@type": "type.googleapis.com/udpa.type.v1.TypedStruct"
                  type_url: "type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit"
                  value:
                    stat_prefix: "local_rate_limiter"
                    token_bucket:
                      max_tokens: 1000
                      tokens_per_fill: 100
                      fill_interval: "1s"
                      
      waf-filter:
        enabled: true
        configPatches:
          - applyTo: "HTTP_FILTER"
            match:
              context: "SIDECAR_INBOUND"
            patch:
              operation: "INSERT_BEFORE"
              value:
                name: "envoy.filters.http.waf"
                typed_config:
                  "@type": "type.googleapis.com/envoy.extensions.filters.http.waf.v3.Waf"
                  config:
                    name: "company-waf-rules"
                    root_id: "company_waf"

# =============================================================================
# CONFIGURAÇÃO DE EXTENSIBILIDADE - PROD
# =============================================================================
extensibility:
  wasmPlugin:
    instances:
      security-plugin:
        enabled: true
        url: "oci://registry.company.com/wasm/security:v1.0.0"
        configuration:
          logLevel: "warn"
          blockSuspiciousRequests: true
          maxRequestSize: 1048576
          
      performance-monitor:
        enabled: true
        url: "oci://registry.company.com/wasm/perf-monitor:v1.0.0"
        configuration:
          sampleRate: 0.1
          alertThreshold: 5000
          
  telemetryV2:
    instances:
      prod-metrics:
        enabled: true
        providers:
          - name: "prometheus"
        tags:
          request_id: "request.headers['x-request-id']"
          user_type: "request.headers['x-user-type']"
          region: "us-east-1"

# =============================================================================
# CONFIGURAÇÃO ADICIONAL - PROD
# =============================================================================
additionalFeatures:
  rateLimiting:
    instances:
      api-limits:
        enabled: true
        descriptors:
          - entries:
              - key: "generic_key"
                value: "api_calls"
            rateLimit:
              requestsPerUnit: 1000
              unit: "MINUTE"
            
      user-limits:
        enabled: true
        descriptors:
          - entries:
              - key: "header_match"
                value: "x-user-id"
            rateLimit:
              requestsPerUnit: 100
              unit: "MINUTE"
            
  circuitBreaker:
    instances:
      api-breaker:
        consecutiveErrors: 5
        timeout: "30s"
        maxConnections: 100
        maxPendingRequests: 50