# User Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: ecommerce-demo
  labels:
    app: user-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
      version: v1
  template:
    metadata:
      labels:
        app: user-service
        version: v1
    spec:
      serviceAccountName: user-service
      containers:
      - name: user-service
        image: hashicorp/http-echo:latest
        args:
        - -text={"service":"user-service","version":"v1","status":"healthy","timestamp":"$(date -Iseconds)","users":2341}
        - -listen=:8080
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: ecommerce-demo
  labels:
    app: user-service
    service: user-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: user-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-service
  namespace: ecommerce-demo
  labels:
    app: user-service
---
# Order Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: ecommerce-demo
  labels:
    app: order-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: order-service
      version: v1
  template:
    metadata:
      labels:
        app: order-service
        version: v1
    spec:
      serviceAccountName: order-service
      containers:
      - name: order-service
        image: hashicorp/http-echo:latest
        args:
        - -text={"service":"order-service","version":"v1","status":"healthy","timestamp":"$(date -Iseconds)","orders_per_minute":89}
        - -listen=:8080
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: ecommerce-demo
  labels:
    app: order-service
    service: order-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: order-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: order-service
  namespace: ecommerce-demo
  labels:
    app: order-service
---
# Payment Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: ecommerce-demo
  labels:
    app: payment-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payment-service
      version: v1
  template:
    metadata:
      labels:
        app: payment-service
        version: v1
    spec:
      serviceAccountName: payment-service
      containers:
      - name: payment-service
        image: hashicorp/http-echo:latest
        args:
        - -text={"service":"payment-service","version":"v1","status":"healthy","timestamp":"$(date -Iseconds)","payments_per_minute":87,"circuit_breaker":"closed"}
        - -listen=:8080
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: ecommerce-demo
  labels:
    app: payment-service
    service: payment-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: payment-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: payment-service
  namespace: ecommerce-demo
  labels:
    app: payment-service
---
# Notification Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: ecommerce-demo
  labels:
    app: notification-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
      version: v1
  template:
    metadata:
      labels:
        app: notification-service
        version: v1
    spec:
      serviceAccountName: notification-service
      containers:
      - name: notification-service
        image: hashicorp/http-echo:latest
        args:
        - -text={"service":"notification-service","version":"v1","status":"healthy","timestamp":"$(date -Iseconds)","messages_per_minute":156,"delivery_rate":"99.9%"}
        - -listen=:8080
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: ecommerce-demo
  labels:
    app: notification-service
    service: notification-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: notification-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: notification-service
  namespace: ecommerce-demo
  labels:
    app: notification-service
