apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ecommerce-demo
  labels:
    app: api-gateway
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
      version: v1
  template:
    metadata:
      labels:
        app: api-gateway
        version: v1
    spec:
      serviceAccountName: api-gateway
      containers:
      - name: api-gateway
        image: nginx:1.25-alpine
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: USER_SERVICE_URL
          value: "http://user-service.ecommerce-demo.svc.cluster.local:8080"
        - name: ORDER_SERVICE_URL
          value: "http://order-service.ecommerce-demo.svc.cluster.local:8080"
        - name: PAYMENT_SERVICE_URL
          value: "http://payment-service.ecommerce-demo.svc.cluster.local:8080"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service.ecommerce-demo.svc.cluster.local:8080"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: config
        configMap:
          name: api-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: ecommerce-demo
  labels:
    app: api-gateway
    service: api-gateway
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: api-gateway
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: ecommerce-demo
  labels:
    app: api-gateway
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: ecommerce-demo
data:
  default.conf: |
    upstream user_service {
        server user-service.ecommerce-demo.svc.cluster.local:8080;
    }
    
    upstream order_service {
        server order-service.ecommerce-demo.svc.cluster.local:8080;
    }
    
    upstream payment_service {
        server payment-service.ecommerce-demo.svc.cluster.local:8080;
    }
    
    upstream notification_service {
        server notification-service.ecommerce-demo.svc.cluster.local:8080;
    }
    
    server {
        listen 8080;
        server_name localhost;
        
        # Health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /ready {
            access_log off;
            return 200 "ready\n";
            add_header Content-Type text/plain;
        }
        
        # Metrics endpoint
        location /metrics {
            access_log off;
            return 200 "# API Gateway Metrics\napi_gateway_requests_total 1247\napi_gateway_latency_seconds 0.023\n";
            add_header Content-Type text/plain;
        }
        
        # User service routes
        location /api/users/ {
            proxy_pass http://user_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-ID $request_id;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Order service routes
        location /api/orders/ {
            proxy_pass http://order_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-ID $request_id;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Payment service routes
        location /api/payments/ {
            proxy_pass http://payment_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-ID $request_id;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Notification service routes
        location /api/notifications/ {
            proxy_pass http://notification_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-ID $request_id;
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }
        
        # Default route
        location / {
            return 404 "API endpoint not found";
            add_header Content-Type text/plain;
        }
    }
